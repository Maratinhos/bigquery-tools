server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files directly
    location ~* \.(?:css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y; # Cache static assets for a long time
        add_header Cache-Control "public";
        try_files $uri $uri/ =404; # Ensure files are served or 404, no fallback to index.html for assets
    }

    # Fallback for React Router (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API proxy to backend
    location /api/ {
        # The backend service is named 'backend' in docker-compose and listens on port 5000
        proxy_pass http://backend:5000/api/;

        # Standard proxy headers
        proxy_set_header Host $host; # Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs including proxies
        proxy_set_header X-Forwarded-Proto $scheme; # http or https

        # Optional: Increase proxy timeouts if needed for long-running API calls
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
    }

    # Optional: WebSocket proxy (if needed in the future)
    # location /ws/ {
    #     proxy_pass http://backend:5000/ws/; # Assuming backend WebSocket is on /ws/
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    # }

    # Optional: Basic error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Or a different root for custom error pages
    }
}
